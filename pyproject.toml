[project]
name = "mcp-github-pr-review-spec-maker"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server that fetches GitHub PR review comments and generates markdown specs"
authors = [
    { name = "Peter Souter", email = "p.morsou@gmail.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    "python-dotenv>=1.0.0",
    "mcp>=1.4.0",
    "httpx>=0.27.0",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.3.1",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/petersouter/mcp-github-pr-review-spec-maker"
Repository = "https://github.com/petersouter/mcp-github-pr-review-spec-maker"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
exclude = [
    "test_*.py",
    "*.md",
    ".env*",
    ".git*"
]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "S",   # bandit
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
]
ignore = [
    "S101", # Use of assert
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["mcp_server"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests", "."]
python_files = "test_*.py"
# Enforce per-test timeouts via pytest-timeout plugin
timeout = 5
# Use thread-based timeouts to work with asyncio and blocking calls
timeout_method = "thread"
timeout_func_only = false

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-timeout>=2.3.1",
    "ruff>=0.12.10",
]
