[project]
name = "mcp-github-pr-review"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server that fetches and formats GitHub PR review comments"
authors = [
    { name = "Peter Souter", email = "p.morsou@gmail.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    "python-dotenv>=1.0.0",
    "mcp>=1.4.0",
    "httpx>=0.27.0",
    "aiofiles>=23.2.1",
    "dulwich>=0.22.0",
    "pydantic>=2.7,<3.0",
]

[project.scripts]
mcp-github-pr-review = "mcp_github_pr_review.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-timeout>=2.3.1",
    "pytest-cov>=6.0.0",
    "pytest-httpx>=0.32.0",
    "hypothesis>=6.100.0",
    "mypy>=1.8.0",
    "respx>=0.21.0",
    "ruff>=0.12.10",
    "pre-commit>=3.5.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.1",
    "hatch>=1.9.0",
]

[project.urls]
Homepage = "https://github.com/cool-kids-inc/github-pr-review-mcp-server"
Repository = "https://github.com/cool-kids-inc/github-pr-review-mcp-server"
Documentation = "https://cool-kids-inc.github.io/github-pr-review-mcp-server/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_github_pr_review"]
exclude = [
    "tests",
    "test_*.py",
    ".env*",
    ".git*",
]
include = [
    "src/mcp_github_pr_review/mcp.json",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/mcp_github_pr_review/mcp.json",
]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "S",   # bandit
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
]
extend-select = [
    "BLE001",  # flake8-blind-except (broad exception catch)
]
ignore = [
    "S101", # Use of assert
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["mcp_github_pr_review"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests", "."]
python_files = "test_*.py"
# Enforce per-test timeouts via pytest-timeout plugin
timeout = 5
# Use thread-based timeouts to work with asyncio and blocking calls
timeout_method = "thread"
timeout_func_only = false
markers = [
    "integration: marks tests as integration tests (may need external dependencies)",
    "slow: marks tests as slow running"
]

[tool.coverage.run]
source = ["."]
omit = [
    "test_*.py",
    "tests/*",
    ".venv/*",
    "venv/*",
    "*/__pycache__/*",
    ".git/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true
extra_checks = true
plugins = ["pydantic.mypy"]
exclude = [
    "tests/",
    "test_*.py"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = [
    "dulwich.*",
    "mcp.*",
    "pytest_asyncio.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-timeout>=2.3.1",
    "pytest-cov>=6.0.0",
    "pytest-httpx>=0.32.0",
    "hypothesis>=6.100.0",
    "mypy>=1.8.0",
    "respx>=0.21.0",
    "ruff>=0.12.10",
    "pre-commit>=3.5.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.1",
    "hatch>=1.9.0",
]
